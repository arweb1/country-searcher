{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\rct\\\\country-searcher\\\\src\\\\pages\\\\HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAllCountries, selectCountriesInfo } from '../store/countries/countries-selector';\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { Controls } from '../components/Controls';\nimport { loadCountries } from '../store/countries/countries-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const countries = useSelector(selectAllCountries);\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectCountriesInfo);\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Can't load info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this) : null, status === 'status' ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }, this) : null, status === 'received' && /*#__PURE__*/_jsxDEV(List, {\n      children: countries.map(c => {\n        const countryInfo = {\n          img: c.flags.png,\n          name: c.name,\n          info: [{\n            title: 'Population',\n            description: c.population.toLocaleString()\n          }, {\n            title: 'Region',\n            description: c.region\n          }, {\n            title: 'Capital',\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => navigate(`/country/${c.name}`),\n          ...countryInfo\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"8N76dlsvtJP0ayP/W2GYzKLx3XI=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/rct/country-searcher/src/pages/HomePage.jsx"],"names":["useNavigate","useEffect","useSelector","useDispatch","selectAllCountries","selectCountriesInfo","List","Card","Controls","loadCountries","HomePage","navigate","dispatch","countries","status","error","qty","map","c","countryInfo","img","flags","png","name","info","title","description","population","toLocaleString","region","capital"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,uCAAxD;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,sCAA9B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,SAAS,GAAGX,WAAW,CAACE,kBAAD,CAA7B;AACA,QAAM;AAACU,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAAuBd,WAAW,CAACG,mBAAD,CAAxC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACe,GAAJ,EAAQ;AACNJ,MAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAACO,GAAD,EAAMJ,QAAN,CAJM,CAAT;AAKA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA8B,IAFtC,EAGGD,MAAM,KAAK,QAAX,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,GAAyC,IAH5C,EAIGA,MAAM,KAAK,UAAX,iBACC,QAAC,IAAD;AAAA,gBACCD,SAAS,CAACI,GAAV,CAAeC,CAAD,IAAO;AACpB,cAAMC,WAAW,GAAG;AAClBC,UAAAA,GAAG,EAAEF,CAAC,CAACG,KAAF,CAAQC,GADK;AAElBC,UAAAA,IAAI,EAAEL,CAAC,CAACK,IAFU;AAGlBC,UAAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACS,UAAF,CAAaC,cAAb;AAFf,WADI,EAKJ;AACEH,YAAAA,KAAK,EAAE,QADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACW;AAFjB,WALI,EASJ;AACEJ,YAAAA,KAAK,EAAE,SADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACY;AAFjB,WATI;AAHY,SAApB;AAmBA,4BACE,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMnB,QAAQ,CAAE,YAAWO,CAAC,CAACK,IAAK,EAApB,CAFzB;AAAA,aAGMJ;AAHN,WACOD,CAAC,CAACK,IADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA3BA;AADD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF;AAwCD,CAnDM;;GAAMb,Q;UACMV,W,EACAG,W,EACCD,W,EACWA,W;;;KAJlBQ,Q","sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAllCountries, selectCountriesInfo } from '../store/countries/countries-selector';\r\nimport { List } from '../components/List';\r\nimport { Card } from '../components/Card';\r\nimport { Controls } from '../components/Controls';\r\nimport { loadCountries } from '../store/countries/countries-actions';\r\n\r\nexport const HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector(selectAllCountries);\r\n  const {status, error, qty} = useSelector(selectCountriesInfo);\r\n\r\n  useEffect(() => {\r\n    if(!qty){\r\n      dispatch(loadCountries())\r\n    }\r\n  }, [qty, dispatch])\r\n  return (\r\n    <>\r\n      <Controls />\r\n      {error ? <h2>Can't load info</h2> : null}\r\n      {status === 'status' ? <h2>Loading</h2> : null}\r\n      {status === 'received' && (\r\n        <List>\r\n        {countries.map((c) => {\r\n          const countryInfo = {\r\n            img: c.flags.png,\r\n            name: c.name,\r\n            info: [\r\n              {\r\n                title: 'Population',\r\n                description: c.population.toLocaleString(),\r\n              },\r\n              {\r\n                title: 'Region',\r\n                description: c.region,\r\n              },\r\n              {\r\n                title: 'Capital',\r\n                description: c.capital,\r\n              },\r\n            ],\r\n          };\r\n\r\n          return (\r\n            <Card\r\n              key={c.name}\r\n              onClick={() => navigate(`/country/${c.name}`)}\r\n              {...countryInfo}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n      )}\r\n      \r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}